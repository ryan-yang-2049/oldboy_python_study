进程：正在进行的一个过程或是一个任务。而负责执行任务的是CPU。
进程与程序的区别：程序仅仅是一堆代码而已，而进程指的是程序的运行过程。

并发: 单CPU，多进程并发
并行：多CPU（同时运行，只有具有多个CPU才能实现并行）
例子：
 有四个核，六个任务，这样同一时间有四个任务被执行，假设分别被分配给了cpu1，cpu2，cpu3，cpu4，
   一旦任务1遇到I/O就被迫中断执行，此时任务5就拿到cpu1的时间片去执行，这就是单核下的多道技术
   而一旦任务1的I/O结束了，操作系统会重新调用它(需知进程的调度、分配给哪个cpu运行，由操作系统说了算)，


同步和异步：
	同步执行：一个进程在执行某个任务时，另外一个进程必须等待其执行完毕，才能继续执行。
	异步执行：一个进程在执行某个任务时，另外一个进程无需等待其执行完毕，就可以继续执行，当有消息返回时，系统会通知或者进行处理，这样可以提高效率。
	

创建进程的4种方式：
	1. 系统初始化
	2. 一个进程在运行过程中开启了子进程(如nginx开启多进程，os.fork,subprocess.Popen等)
	3. 用户的交互式请求，而创建一个新进程（如用户双击暴风影音）
	4. 一个批处理作业的初始化（只在大型机的批处理系统中应用）
	
进程的终止：
	1. 正常退出（自愿，如用户点击交互式页面的叉号，或程序执行完毕调用发起系统调用正常退出，在linux中用exit，在windows中用ExitProcess）
	2. 出错退出（自愿，python a.py中a.py不存在）
	3. 严重错误（非自愿，执行非法指令，如引用不存在的内存，可以捕捉异常，try...except...）
	4. 被其他进程杀死（非自愿，如kill -9）	






